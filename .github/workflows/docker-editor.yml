name: Build & Push Unity Editor

on:
  workflow_dispatch:
    inputs:
      base_tag:
        description: 'Base image tag (e.g., 22.04)'
        required: true
        default: '22.04'
      hub_version:
        description: 'Unity Hub version (e.g., 3.7.0)'
        required: true
        default: '3.7.0'
      editor_version:
        description: 'Unity Editor version (e.g., 6000.0.48f1)'
        required: true
        default: '6000.0.48f1'
      editor_changeset:
        description: 'Unity Editor changeset (e.g., 170d2541580d)'
        required: true
        default: '170d2541580d'
      editor_modules:
        description: 'Unity Editor modules (space separated, e.g., android webgl)'
        required: true
        default: 'android webgl'
      architecture:
        description: 'Target architecture for Unity Editor (x86_64 or arm64)'
        required: true
        default: 'x86_64'

jobs:
  build-editor:
    runs-on: self-hosted
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set repository name to lowercase
        id: repo_name
        run: echo "repo=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Build and push editor image
        uses: docker/build-push-action@v5
        with:
          context: ./editor
          file: ./editor/Dockerfile
          build-args: |
            baseImage=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/containerized-unity-base:${{ github.event.inputs.base_tag }}
            hubImage=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/containerized-unity-hub:${{ github.event.inputs.hub_version }}-ubuntu${{ github.event.inputs.base_tag }}
            version=${{ github.event.inputs.editor_version }}
            changeSet=${{ github.event.inputs.editor_changeset }}
            module=${{ github.event.inputs.editor_modules }}
            ARCHITECTURE=${{ github.event.inputs.architecture }}
          tags: |
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/containerized-unity-editor:${{ github.event.inputs.editor_version }}-${{ github.event.inputs.architecture }}
          push: true

      - name: Notify Discord
        if: always()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        shell: bash
        run: |
          # Determine build status from job context
          if [[ "${{ job.status }}" == "success" ]]; then
            status="Success"
            color=3066993
          elif [[ "${{ job.status }}" == "failure" ]]; then
            status="Failed"
            color=15158332
          elif [[ "${{ job.status }}" == "cancelled" ]]; then
            status="Cancelled"
            color=15844367
          else
            status="${{ job.status }}"
            color=15844367
          fi
          tag="docker.io/${{ secrets.DOCKERHUB_USERNAME }}/containerized-unity-editor:${{ github.event.inputs.editor_version }}-${{ github.event.inputs.architecture }}"
          payload=$(jq -n \
            --arg title "Build completed for Unity Editor Docker image!" \
            --arg desc "Build and push completed for Unity Editor Docker image." \
            --arg status "$status" \
            --arg tag "$tag" \
            --arg tagval "${{ github.event.inputs.editor_version }}-${{ github.event.inputs.architecture }}" \
            --arg basetag "${{ github.event.inputs.base_tag }}" \
            --arg hubver "${{ github.event.inputs.hub_version }}" \
            --arg unityver "${{ github.event.inputs.editor_version }}" \
            --arg changeset "${{ github.event.inputs.editor_changeset }}" \
            --arg modules "${{ github.event.inputs.editor_modules }}" \
            --arg arch "${{ github.event.inputs.architecture }}" \
            --arg workflow "${{ github.workflow }}" \
            --arg runnum "${{ github.run_number }}" \
            --arg commit "${{ github.sha }}" \
            --arg actor "${{ github.actor }}" \
            --arg color "$color" \
            '{
              content: "<@&961819174282350683>",
              embeds: [
                {
                  title: $title,
                  color: ($color|tonumber),
                  description: $desc,
                  fields: [
                    {name: "Build Status", value: $status, inline: false},
                    {name: "Image", value: $tag, inline: false},
                    {name: "Tag", value: $tagval, inline: true},
                    {name: "Base Tag", value: $basetag, inline: true},
                    {name: "Hub Version", value: $hubver, inline: true},
                    {name: "Unity Version", value: $unityver, inline: true},
                    {name: "Editor Changeset", value: $changeset, inline: false},
                    {name: "Editor Modules", value: $modules, inline: false},
                    {name: "Architecture", value: $arch, inline: true},
                    {name: "Workflow", value: $workflow, inline: true},
                    {name: "Run Number", value: $runnum, inline: true},
                    {name: "Commit", value: $commit, inline: false},
                    {name: "Triggered By", value: $actor, inline: true}
                  ]
                }
              ]
            }')
          curl -H "Content-Type: application/json" -X POST -d "$payload" "$DISCORD_WEBHOOK"
# Replace <@&ROLE_ID> with your Discord role ID to tag the role.
# Make sure to add DISCORD_WEBHOOK as a secret in your repository.
# After this workflow completes, the editor image will be available as docker.io/USERNAME/containerized-unity-editor:EDITORVERSION
# Make sure the base and hub images exist before running this workflow.