name: Build & Push Unity Editor

on:
  workflow_dispatch:
    inputs:
      base_tag:
        description: 'Base image tag (e.g., 22.04)'
        required: true
        default: '22.04'
      hub_version:
        description: 'Unity Hub version (e.g., 3.7.0)'
        required: true
        default: '3.12.1'
      editor_version:
        description: 'Unity Editor version (e.g., 6000.0.48f1)'
        required: true
        default: '6000.0.48f1'
      editor_changeset:
        description: 'Unity Editor changeset (e.g., 170d2541580d)'
        required: true
        default: '170d2541580d'
      editor_modules:
        description: 'Unity Editor modules'
        required: true
        type: choice
        default: 'android'
        options:
          - android
          - webgl
          - ios
      architecture:
        description: 'Target architecture (x86_64, arm64, or both)'
        required: true
        default: 'x86_64'
        type: choice
        options:
          - x86_64
          - arm64
          - both

jobs:
  build-editor:
    runs-on: mkt
    timeout-minutes: 1440 # 24 hours
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Show Buildx version
        run: docker buildx version

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set platform based on input
        id: platform
        run: |
          if [[ "${{ github.event.inputs.architecture }}" == "both" ]]; then
            echo "platforms=linux/amd64,linux/arm64" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.inputs.architecture }}" == "arm64" ]]; then
            echo "platforms=linux/arm64" >> $GITHUB_OUTPUT
          else
            echo "platforms=linux/amd64" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Build and push editor image
        uses: docker/build-push-action@v5
        with:
          context: ./editor
          file: ./editor/Dockerfile
          platforms: ${{ steps.platform.outputs.platforms }}
          build-args: |
            baseImage=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/containerized-unity-base:${{ github.event.inputs.base_tag }}
            hubImage=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/containerized-unity-hub:${{ github.event.inputs.hub_version }}-ubuntu${{ github.event.inputs.base_tag }}-${{ github.event.inputs.architecture }}
            version=${{ github.event.inputs.editor_version }}
            changeSet=${{ github.event.inputs.editor_changeset }}
            module=${{ github.event.inputs.editor_modules }}
            architecture=${{ github.event.inputs.architecture }}
          tags: |
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/containerized-unity-editor:${{ github.event.inputs.editor_version }}-${{ github.event.inputs.architecture }}-${{ github.event.inputs.editor_modules }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Prune Docker (self-hosted only)
        if: runner.os != 'Linux' # Remove or adjust this line if you want to prune on all runners
        run: docker system prune -af

      - name: Notify Discord
        if: always()
        uses: appleboy/discord-action@v1.2.0
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK }}
          username: Unity Editor CI
          color: >-
            ${{
              job.status == 'success' && '#48f442' ||
              job.status == 'failure' && '#ff0000' ||
              job.status == 'cancelled' && '#ffcc00'
            }}
          message: |
            **Unity Editor Docker Build**
            Build status: `${{ job.status }}`
            - **Image:** docker.io/${{ secrets.DOCKERHUB_USERNAME }}/containerized-unity-editor:${{ github.event.inputs.editor_version }}-${{ github.event.inputs.architecture }}
            - **Base Tag:** ${{ github.event.inputs.base_tag }}
            - **Hub Version:** ${{ github.event.inputs.hub_version }}
            - **Unity Version:** ${{ github.event.inputs.editor_version }}
            - **Architecture:** ${{ github.event.inputs.architecture }}
            - **Editor Modules:** ${{ github.event.inputs.editor_modules }}